How did viewing a diff between two versions of a file help you see the bug that
was introduced?

It showed which lines were different. 


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It could save me making the same mistake too often. 
I could see what I'd done before and not go back and do the same thing again. 
It could also help me go back to my last working version, and then carefully look at the changes since then. 


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros: you can use your judgement to create suitable commit points. 
Cons: you might forget to do it, or do to many just in case you forget. 



Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?


Because git was designed for programming, it considers the fact that files may be interdependent. Google Docs was set up with the assumption that every file is discrete. 


How can you use the commands git log and git diff to view the history of files?

Git log shows the ID, time, date, person, and description of every commit. 
Git diff shows the differences between any two commits. 


How might using version control make you more confident to make changes that
could break something?

I now know how to easily find the change and, if needed, put it back. 


Now that you have your workspace set up, what do you want to try using Git for?

Actually, pretty much everything! All my websites, plus Mark's poems would be good. 

